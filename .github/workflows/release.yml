name: Build and Release APK
on:
  workflow_dispatch:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code from main repository
        uses: actions/checkout@v3

      - name: Checkout code from another repository
        uses: actions/checkout@v3
        with:
          repository: ${{ secrets.REPOSITORY }}
          path: './msaber-flutter'
          ref: 'main'
          token: ${{ secrets.PERSON_ACCESS_TOKEN }}

      - name: Set up Flutter
        uses: subosito/flutter-action@v1
        with:
          flutter-version: '3.22.2'

      - name: Build APK
        run: |
          cd ./msaber-flutter
          flutter pub get
          flutter build apk --release

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PERSON_ACCESS_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload_release_asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PERSON_ACCESS_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./msaber-flutter/build/app/outputs/flutter-apk/app-release.apk
          asset_name: app-release.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Calculate APK Size and MD5
        id: calculate_apk
        run: |
          APK_PATH=./msaber-flutter/build/app/outputs/flutter-apk/app-release.apk
          APK_SIZE=$(stat -c%s "$APK_PATH")
          APK_MD5=$(md5sum "$APK_PATH" | awk '{ print $1 }')
          echo "APK_SIZE=$APK_SIZE" >> $GITHUB_ENV
          echo "APK_MD5=$APK_MD5" >> $GITHUB_ENV

      - name: Switch to main branch
        run: |
          git fetch origin
          git switch -C main origin/main

      - name: Update version.json
        run: |
          VERSION_NAME=${{ github.ref_name }}
          DOWNLOAD_URL=https://github.com/huangpj0210/msaber-android/releases/download/${{ github.ref_name }}/app-release.apk
          jq ".versionName = \"$VERSION_NAME\" | .downloadUrl = \"$DOWNLOAD_URL\" | .apkSize = $APK_SIZE | .apkMd5 = \"$APK_MD5\"" version.json > version.tmp && mv version.tmp version.json
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add version.json
          git commit -m "Update version.json for release $VERSION_NAME"
          git push https://${{ secrets.PERSON_ACCESS_TOKEN }}@github.com/huangpj0210/msaber-android.git main
